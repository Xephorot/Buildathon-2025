/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    AccessControl: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "patient",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "grantee",
              type: "address",
            },
          ],
          name: "AccessGranted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "patient",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "grantee",
              type: "address",
            },
          ],
          name: "AccessRevoked",
          type: "event",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_grantee",
              type: "address",
            },
          ],
          name: "grantAccess",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_patient",
              type: "address",
            },
            {
              internalType: "address",
              name: "_viewer",
              type: "address",
            },
          ],
          name: "hasAccess",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_grantee",
              type: "address",
            },
          ],
          name: "revokeAccess",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 3,
    },
    AuditTrail: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "actor",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "action",
              type: "string",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "entryIndex",
              type: "uint256",
            },
          ],
          name: "AccessLogged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "entryIndex",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "actor",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "target",
              type: "address",
            },
          ],
          name: "AuditEntryCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "actor",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "action",
              type: "string",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "entryIndex",
              type: "uint256",
            },
          ],
          name: "PermissionChangeLogged",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getAuditEntry",
          outputs: [
            {
              internalType: "address",
              name: "actor",
              type: "address",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "string",
              name: "action",
              type: "string",
            },
            {
              internalType: "string",
              name: "details",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "timestamp",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "dataHash",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getAuditLogLength",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_limit",
              type: "uint256",
            },
          ],
          name: "getAuditTrail",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "actor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "action",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "details",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "dataHash",
                  type: "bytes32",
                },
              ],
              internalType: "struct AuditTrail.AuditEntry[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_actor",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_limit",
              type: "uint256",
            },
          ],
          name: "getAuditTrailByActor",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "actor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "action",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "details",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "dataHash",
                  type: "bytes32",
                },
              ],
              internalType: "struct AuditTrail.AuditEntry[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_target",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_offset",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_limit",
              type: "uint256",
            },
          ],
          name: "getAuditTrailByTarget",
          outputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "actor",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "target",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "action",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "details",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "timestamp",
                  type: "uint256",
                },
                {
                  internalType: "bytes32",
                  name: "dataHash",
                  type: "bytes32",
                },
              ],
              internalType: "struct AuditTrail.AuditEntry[]",
              name: "",
              type: "tuple[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_actor",
              type: "address",
            },
          ],
          name: "getEntriesCountByActor",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_target",
              type: "address",
            },
          ],
          name: "getEntriesCountByTarget",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_target",
              type: "address",
            },
            {
              internalType: "string",
              name: "_details",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "_dataHash",
              type: "bytes32",
            },
          ],
          name: "logAccess",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_target",
              type: "address",
            },
            {
              internalType: "string",
              name: "_action",
              type: "string",
            },
            {
              internalType: "string",
              name: "_details",
              type: "string",
            },
          ],
          name: "logPermissionChange",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_expectedHash",
              type: "bytes32",
            },
          ],
          name: "verifyEntry",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 7,
    },
    MedicalRecords: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "patient",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "ipfsHash",
              type: "string",
            },
          ],
          name: "DocumentAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "patient",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "docIndex",
              type: "uint256",
            },
          ],
          name: "DocumentUpdated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_ipfsHash",
              type: "string",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
          ],
          name: "addDocument",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_patient",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
          ],
          name: "getDocument",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_patient",
              type: "address",
            },
          ],
          name: "getDocumentCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_index",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_newDescription",
              type: "string",
            },
          ],
          name: "updateDocumentMetadata",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 5,
    },
    YourContract: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "greetingSetter",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "newGreeting",
              type: "string",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "premium",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "GreetingChange",
          type: "event",
        },
        {
          inputs: [],
          name: "greeting",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "premium",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_newGreeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userGreetingCounter",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 1,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
